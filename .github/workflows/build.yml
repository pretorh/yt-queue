name: Build, lint, test and publish

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ master ]

env:
  DEFAULT_PYTHON: 3.11

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.DEFAULT_PYTHON }}
    - name: Install dependencies
      run: pip install -r requirements.txt -r requirements-dev.txt
    - name: Lint with pylint and shellcheck using script
      run: ./dev/lint.sh

  test:
    if: ${{ github.ref_name == 'master' || github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: pip install -r requirements.txt -r requirements-dev.txt
    - name: Test with pytest
      run: pytest

  build-package:
    if: ${{ github.ref_name == 'master' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.DEFAULT_PYTHON }}
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install --upgrade build
    - name: Build package
      run: python3 -m build
    - name: Upload package as artifact
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/*

  dist-check:
    if: ${{ github.ref_name == 'master' }}
    needs:
      - build-package
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v4
    - name: Download package artifact
      uses: actions/download-artifact@v2.1.1
      with:
        name: dist
        path: dist/
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Test source package
      run: ./dist-check.sh dist/yt-queue-*.tar.gz
    - name: Test wheel package
      run: ./dist-check.sh dist/yt_queue-*-py3-none-any.whl

  publish:
    if: ${{ github.ref_name == 'master' && startsWith(github.event.head_commit.message, 'bump to version ')}}
    needs:
      - lint
      - test
      - dist-check
    runs-on: ubuntu-latest
    steps:
    - name: Download package artifact
      uses: actions/download-artifact@v2.1.1
      with:
        name: dist
        path: dist/
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.DEFAULT_PYTHON }}
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@v1.8.10
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        verbose: true
